{"version":3,"sources":["logo.svg","components/Navbar.js","components/Alert.js","components/TextArea.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","type","id","onClick","toggleMode","htmlFor","prototype","title","PropTypes","string","Alert","alert","role","word","lower","toLowerCase","charAt","toUpperCase","slice","capital","msg","TextArea","useState","text","setText","style","color","value","onChange","event","console","log","target","backgroundColor","rows","newText","showalert","document","getElementById","select","navigator","clipboard","writeText","split","join","length","App","setmode","setalert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.5ec393ec.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"#\">TEXT UTILS</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"/navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n              </li>\r\n              {/* <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/about\">About</Link>\r\n              </li> */}\r\n             \r\n             </ul>\r\n            {/* <form className=\"d-flex\">\r\n              <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n              <button className=\"btn btn-outline-danger\" type=\"submit\">Search</button>\r\n            </form> */}\r\n            <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`} >\r\n                <input className=\"form-check-input\" type=\"checkbox\" onClick={props.toggleMode} id=\"flexSwitchCheckDefault\"/>\r\n                <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">ENABLE Dark Mode</label>\r\n           </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    )\r\n}\r\n\r\nNavbar.prototype = {title: PropTypes.string}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n\r\n    const capital = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n\r\n\r\n    return (\r\n      props.alert &&  <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n               <strong> {capital(props.alert.type)}</strong>:{props.alert.msg} \r\n                \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","\r\nimport React, {useState} from 'react'\r\n\r\n\r\n\r\nexport default function TextArea(props) {\r\n    const handleUpClick = ()=>{\r\n        console.log(\"UperCase was clicked\" + text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText)   \r\n        props.showalert(\"uppercase converted successfully\", \"success\");  \r\n    }\r\n    const handleloClick = ()=>{\r\n        console.log(\"LowerCase was clicked\" + text);\r\n        let newText = text.toLowerCase();\r\n        setText(newText)\r\n        props.showalert(\"Lowercase converted successfully\", \"success\");\r\n    }\r\n    const handleClClick = ()=>{\r\n        console.log(\"clear was clicked\" + text);\r\n        let newText = (\"\");\r\n        setText(newText)\r\n        props.showalert(\"Clear did successfully\", \"success\");\r\n    }\r\n\r\n    const handleOnChange = (event)=>{\r\n        console.log(\"ON CHANGE\");\r\n        setText(event.target.value);\r\n\r\n        \r\n    }\r\n\r\n    const handlecopy = ()=>{\r\n        console.log(\"i am copy\");\r\n        var text = document.getElementById(\"myBox \");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showalert(\"Copied successfully\", \"success\");\r\n    }\r\n\r\n\r\n    const handlespace = ()=>{\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"))\r\n        props.showalert(\"Removed space successfully\", \"success\");\r\n    }\r\n\r\n    const [text, setText]= useState(\"Enter Text Here:\"); \r\n\r\n    return (\r\n\r\n        <>\r\n\r\n       \r\n        <div className=\"container\" style={{color: props.mode==='dark'?'white':'#212529'}}>\r\n                <h1 >ENTER YOUR TEXT HERE </h1> \r\n                <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode==='dark'?'#212529':'white', color: props.mode==='dark'?'white':'#212529'}}   id=\"myBox \"   rows=\"8\"></textarea><br />\r\n                <button className=\"btn btn-danger mx-1\" onClick={handleUpClick}>Convert Upercase</button>\r\n                <button className=\"btn btn-danger mx-1\" onClick={handleloClick}>Convert Lowercase</button>\r\n                <button className=\"btn btn-danger mx-1\" onClick={handleClClick}>Clear Text</button>\r\n                <button className=\"btn btn-danger mx-1\" onClick={handlecopy}>Copy Text</button>\r\n                <button className=\"btn btn-danger mx-1\" onClick={handlespace}>Remove Extra Space</button>\r\n\r\n        </div>\r\n\r\n        \r\n        <div className=\"container my-3\" style={{color: props.mode==='dark'?'white':'#212529'}}>\r\n            <h1><b>Your Text Summary.</b></h1>\r\n            <p>Your Text Has {text.split(\" \").length} Words and  {text.length} Characters</p>\r\n            <p>Your Text Needs {0.008 * text.split(\" \").length} Minutes To Read</p>\r\n            <h2><b>Text Preview</b></h2>\r\n            <p>{text}</p>\r\n            \r\n        </div>\r\n        \r\n\r\n\r\n</>\r\n    )\r\n}\r\n","import logo from './logo.svg';\nimport './App.css';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport Alert from './components/Alert'\nimport TextArea from './components/TextArea';\nimport React, { useState } from 'react';\n// import{\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode, setmode] = useState('light');\n  const [alert, setalert] = useState(null);\n\n  const showalert = (message,type)=>{\n      setalert({\n        msg: message,\n        type: type\n      })\n      setTimeout(() => {\n        setalert(null);\n      }, 1000);\n  }\n\n  const toggleMode = ()=>{\n    if(mode === 'light'){\n      setmode('dark');\n      document.body.style.backgroundColor = '#212529';\n      showalert(\"  Dark mode has been enabeled\", \"success\");\n    }\n    else{\n      setmode('light');\n      document.body.style.backgroundColor = 'white';\n      showalert(\"  Light mode has been enabeled\", \"success\");\n    }\n  }\n\n  return (\n   <>\n\n{/* <Router> */}\n    <Navbar mode={mode} toggleMode={toggleMode}/>\n    <Alert alert={alert}/>\n    {/* <Switch>\n          <Route exact path=\"/about\">\n            <About />\n          </Route>\n         \n          <Route exact path=\"/\"> */}\n          <TextArea showalert={showalert}  mode={mode}/>\n          \n          {/* </Route>\n        </Switch>\n        </Router> */}\n    {/* <About/> */}\n\n   </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}